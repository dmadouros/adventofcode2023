/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package starter

data class Race(val time: Long, val distance: Long) {
  fun findBestTimes(): List<Long> {
    val holds = 1..<time
    return holds.mapNotNull { speed ->
      val remainingSeconds = time - speed
      val dx = remainingSeconds * speed
      if (dx > distance) speed else null
    }
  }
}

class App {
  fun exec() {
    val input = this::class.java.getResource("/input.txt")!!.readText()

    print("Part 1...")
    val times = input.split("\n").first().trim().split(":").last().trim().split("""\s+""".toRegex()).map { it.toLong() }
    val distances =
      input.split("\n").last().trim().split(":").last().trim().split("""\s+""".toRegex()).map { it.toLong() }
    val races = times.zip(distances).map { (time, distance) -> Race(time, distance) }
    val part1 = races.map { race -> race.findBestTimes() }.map { it.size }.fold(1) { memo, it -> memo * it }
    println(part1)

    print("Part 2...")
    val time = input.split("\n").first().trim().split(":").last().trim().replace(" ", "").toLong()
    val distance =
      input.split("\n").last().trim().split(":").last().trim().replace(" ", "").toLong()
    val race = Race(time, distance)
    val part2 = race.findBestTimes().count()
    println(part2)
  }
}

fun main() {
  App().exec()
}
